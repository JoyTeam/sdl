load("@rules_cc//cc:defs.bzl", "cc_library")

alias(
	name = "windows",
	actual  = "@bazel_tools//src/conditions:windows"
)

alias(
	name = "macos",
	actual  = "@bazel_tools//src/conditions:darwin_x86_64"
)

alias(
	name = "linux",
	actual  = "@bazel_tools//src/conditions:linux_x86_64"
)

SDL_LINKOPTS = select({
	"//:windows": [
		"-DEFAULTLIB:user32",
		"-DEFAULTLIB:gdi32",
		"-DEFAULTLIB:winmm",
		"-DEFAULTLIB:imm32",
		"-DEFAULTLIB:ole32",
		"-DEFAULTLIB:oleaut32",
		"-DEFAULTLIB:version",
		"-DEFAULTLIB:uuid",
		"-DEFAULTLIB:shell32",
		"-DEFAULTLIB:advapi32",
		"-DEFAULTLIB:hid",
		"-DEFAULTLIB:setupapi",
		"-DEFAULTLIB:opengl32",
		"-DEFAULTLIB:kernel32",
	],
	"//conditions:default": [],
})

cc_library(
	name = "sdl",
	hdrs = glob([
        "include/SDL3/*.h",
    ]),
	includes = ["include", "src"],
	srcs = glob([
        "src/**/*.h",
        "src/*.c",
        "src/core/*.c",
        "src/stdlib/*.c",
        "src/events/*.c",
        "src/video/*.c",
        "src/video/yuv2rgb/*.c",
        "src/video/dummy/*.c",
        "src/libm/*.c",
        "src/timer/*.c",
        "src/joystick/*.c",
        "src/joystick/virtual/*.c",
        "src/joystick/hidapi/*.c",
        "src/haptic/*.c",
        "src/sensor/*.c",
        "src/audio/*.c",
        "src/audio/wasapi/*.c",
        "src/audio/disk/*.c",
        "src/audio/dummy/*.c",
        "src/thread/*.c",
        "src/hidapi/*.c",
        "src/cpuinfo/*.c",
        "src/file/*.c",
        "src/dynapi/*.c",
        "src/atomic/*.c",
        "src/render/*.c",
        "src/render/software/*.c",
        "src/power/*.c",
    ]) + select({
        "//:windows": glob([
            "src/core/windows/*.c",
            "src/video/windows/*.c",
            "src/timer/windows/*.c",
            "src/joystick/windows/*.c",
            "src/haptic/windows/*.c",
            "src/sensor/windows/*.c",
            "src/audio/directsound/*.c",
            "src/thread/windows/*.c",
            "src/loadso/windows/*.c",
            "src/render/direct3d/*.c",
            "src/render/direct3d11/*.c",
            "src/render/opengl/*.c",
            "src/render/opengles2/*.c",
            "src/power/windows/*.c",
            "src/filesystem/windows/*.c",
        ]) + [
            "src/thread/generic/SDL_syscond.c",
            "src/thread/generic/SDL_sysrwlock.c",
        ],
     	"//conditions:default": [],
   }),
	linkopts = SDL_LINKOPTS,
	visibility = ["//visibility:public"],
)